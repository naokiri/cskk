# Rule toml definition not determined yet

[metadata]
# 名前。必須。
name = "default"
# 説明文。必須。
description = "default typing rule"

# conversion:
# Key-Valueの配列 ローマ字変換規則
#
# Keyはkeysym列
# スペース区切りで各wordがKeysymであればそのKeysymとして、そうでなければ各バイトをasciiとみなした文字のKeysymとして変換する。
# 変換できなかったものは無視される。
# 名称は https://github.com/xkbcommon/libxkbcommon/blob/master/include/xkbcommon/xkbcommon-keysyms.h による。
# ascii文字(0x20..=0x7E)の範囲のみ変換する。
# 例:
# "space 無視" -> KEY_space
# "lk Shift_L" -> KEY_l, KEY_k, KEY_Shift_L
# "ab" -> KEY_a, KEY_b
# "at" -> KEY_at
# 最後の例のように"Up", "at", "mu", "ae", "oe", "ht", "ff", "cr", "lf", "nl", "IO" 等短い名称のKeysymは対応するKeysym扱いされるので、2つのKeysym扱いしたい場合はスペースを間に入れる必要がある。
#
# Valueは2要素の配列
# 最初の要素はまたkeysym列、carryoverとして使われる。
# 2つ目の要素が変換先文字列
#
# 例として kk = ["k", "っ"] と定義がある場合、k kと入力した際に"っ"が入力され、"k"が入力待ちの状態で残る。
[conversion]
colon = ["", "："]
semicolon = ["", "；"]
question = ["", "？"]
bracketleft = ["", "「"]
bracketright = ["", "」"]
minus = ["", "ー"]
a = ["", "あ"]
ba = ["", "ば"]
bb = ["b", "っ"]
be = ["", "べ"]
bi = ["", "び"]
bo = ["", "ぼ"]
bu = ["", "ぶ"]
bya = ["", "びゃ"]
bye = ["", "びぇ"]
byi = ["", "びぃ"]
byo = ["", "びょ"]
byu = ["", "びゅ"]
cc = ["c", "っ"]
cha = ["", "ちゃ"]
che = ["", "ちぇ"]
chi = ["", "ち"]
cho = ["", "ちょ"]
chu = ["", "ちゅ"]
cya = ["", "ちゃ"]
cye = ["", "ちぇ"]
cyi = ["", "ちぃ"]
cyo = ["", "ちょ"]
cyu = ["", "ちゅ"]
da = ["", "だ"]
dd = ["d", "っ"]
de = ["", "で"]
dha = ["", "でゃ"]
dhe = ["", "でぇ"]
dhi = ["", "でぃ"]
dho = ["", "でょ"]
dhu = ["", "でゅ"]
di = ["", "ぢ"]
do = ["", "ど"]
du = ["", "づ"]
dya = ["", "ぢゃ"]
dye = ["", "ぢぇ"]
dyi = ["", "ぢぃ"]
dyo = ["", "ぢょ"]
dyu = ["", "ぢゅ"]
e = ["", "え"]
fa = ["", "ふぁ"]
fe = ["", "ふぇ"]
"f f" = ["f", "っ"]
fi = ["", "ふぃ"]
fo = ["", "ふぉ"]
fu = ["", "ふ"]
fya = ["", "ふゃ"]
fye = ["", "ふぇ"]
fyi = ["", "ふぃ"]
fyo = ["", "ふょ"]
fyu = ["", "ふゅ"]
ga = ["", "が"]
ge = ["", "げ"]
gg = ["g", "っ"]
gi = ["", "ぎ"]
go = ["", "ご"]
gu = ["", "ぐ"]
gya = ["", "ぎゃ"]
gye = ["", "ぎぇ"]
gyi = ["", "ぎぃ"]
gyo = ["", "ぎょ"]
gyu = ["", "ぎゅ"]
ha = ["", "は"]
he = ["", "へ"]
hh = ["h", "っ"]
hi = ["", "ひ"]
ho = ["", "ほ"]
hu = ["", "ふ"]
hya = ["", "ひゃ"]
hye = ["", "ひぇ"]
hyi = ["", "ひぃ"]
hyo = ["", "ひょ"]
hyu = ["", "ひゅ"]
i = ["", "い"]
ja = ["", "じゃ"]
je = ["", "じぇ"]
ji = ["", "じ"]
jj = ["j", "っ"]
jo = ["", "じょ"]
ju = ["", "じゅ"]
jya = ["", "じゃ"]
jye = ["", "じぇ"]
jyi = ["", "じぃ"]
jyo = ["", "じょ"]
jyu = ["", "じゅ"]
ka = ["", "か"]
ke = ["", "け"]
ki = ["", "き"]
kk = ["k", "っ"]
ko = ["", "こ"]
ku = ["", "く"]
kya = ["", "きゃ"]
kye = ["", "きぇ"]
kyi = ["", "きぃ"]
kyo = ["", "きょ"]
kyu = ["", "きゅ"]
ma = ["", "ま"]
me = ["", "め"]
mi = ["", "み"]
mm = ["m", "っ"]
mo = ["", "も"]
mu = ["", "む"]
mya = ["", "みゃ"]
mye = ["", "みぇ"]
myi = ["", "みぃ"]
myo = ["", "みょ"]
myu = ["", "みゅ"]
na = ["", "な"]
ne = ["", "ね"]
ni = ["", "に"]
nn = ["", "ん"]
no = ["", "の"]
nu = ["", "ぬ"]
nya = ["", "にゃ"]
nye = ["", "にぇ"]
nyi = ["", "にぃ"]
nyo = ["", "にょ"]
nyu = ["", "にゅ"]
"n quotedbl" = ["", "ん"]
o = ["", "お"]
pa = ["", "ぱ"]
pe = ["", "ぺ"]
pi = ["", "ぴ"]
po = ["", "ぽ"]
pp = ["p", "っ"]
pu = ["", "ぷ"]
pya = ["", "ぴゃ"]
pye = ["", "ぴぇ"]
pyi = ["", "ぴぃ"]
pyo = ["", "ぴょ"]
pyu = ["", "ぴゅ"]
ra = ["", "ら"]
re = ["", "れ"]
ri = ["", "り"]
ro = ["", "ろ"]
rr = ["r", "っ"]
ru = ["", "る"]
rya = ["", "りゃ"]
rye = ["", "りぇ"]
ryi = ["", "りぃ"]
ryo = ["", "りょ"]
ryu = ["", "りゅ"]
sa = ["", "さ"]
se = ["", "せ"]
sha = ["", "しゃ"]
she = ["", "しぇ"]
shi = ["", "し"]
sho = ["", "しょ"]
shu = ["", "しゅ"]
si = ["", "し"]
so = ["", "そ"]
ss = ["s", "っ"]
su = ["", "す"]
sya = ["", "しゃ"]
sye = ["", "しぇ"]
syi = ["", "しぃ"]
syo = ["", "しょ"]
syu = ["", "しゅ"]
ta = ["", "た"]
te = ["", "て"]
tha = ["", "てぁ"]
the = ["", "てぇ"]
thi = ["", "てぃ"]
tho = ["", "てょ"]
thu = ["", "てゅ"]
ti = ["", "ち"]
to = ["", "と"]
tsu = ["", "つ"]
tt = ["t", "っ"]
tu = ["", "つ"]
tya = ["", "ちゃ"]
tye = ["", "ちぇ"]
tyi = ["", "ちぃ"]
tyo = ["", "ちょ"]
tyu = ["", "ちゅ"]
u = ["", "う"]
va = ["", "ゔぁ"]
ve = ["", "ゔぇ"]
vi = ["", "ゔぃ"]
vo = ["", "ゔぉ"]
vu = ["", "ゔ"]
vv = ["v", "っ"]
wa = ["", "わ"]
we = ["", "うぇ"]
wi = ["", "うぃ"]
wo = ["", "を"]
wu = ["", "う"]
ww = ["w", "っ"]
xa = ["", "ぁ"]
xe = ["", "ぇ"]
xi = ["", "ぃ"]
xka = ["", "ゕ"]
xke = ["", "ゖ"]
xo = ["", "ぉ"]
xtsu = ["", "っ"]
xtu = ["", "っ"]
xu = ["", "ぅ"]
xwa = ["", "ゎ"]
xwe = ["", "ゑ"]
xwi = ["", "ゐ"]
xx = ["x", "っ"]
xya = ["", "ゃ"]
xyo = ["", "ょ"]
xyu = ["", "ゅ"]
ya = ["", "や"]
ye = ["", "いぇ"]
yo = ["", "よ"]
yu = ["", "ゆ"]
yy = ["y", "っ"]
"z comma" = ["", "‥"]
"z period" = ["", "…"]
"z backslash" = ["", "・"]
"z bracketleft" = ["", "『"]
"z bracketright" = ["", "』"]
"z hyphen" = ["", "〜"]
za = ["", "ざ"]
ze = ["", "ぜ"]
zh = ["", "←"]
zi = ["", "じ"]
zj = ["", "↓"]
zk = ["", "↑"]
zl = ["", "→"]
zo = ["", "ぞ"]
zu = ["", "ず"]
zya = ["", "じゃ"]
zye = ["", "じぇ"]
zyi = ["", "じぃ"]
zyo = ["", "じょ"]
zyu = ["", "じゅ"]
zz = ["z", "っ"]

#
# command: 各モードのコマンド
# keyは1つのKeyEvent
# 前置詞としてC-,A-,M-,G-がそれぞれCtrl,Mod1(Alt)、Meta, Mod5モディファイアとして解釈される。
# 本体は上記conversionと同じKeysym
#
# valueは
#
[command]
# Hiraganaモード時のコマンド
[direct.hiragana]
"l" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(Ascii)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"L" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(Zenkaku)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"C-q" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(HankakuKatakana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(Katakana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"Q" = ["ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-j" = ["FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"C-G" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"Return" = ["ConfirmDirect"]
"C-m" = ["ConfirmDirect"]
"BackSpace" = ["DeleteDirect"]
"C-h" = ["DeleteDirect"]
"C-H" = ["DeleteDirect"]
# Katakanaモード時のコマンド
[direct.katakana]
"C-g" = ["Abort"]
"l" = ["OutputNNIfAny(Katakana)", "ChangeInputMode(Ascii)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"L" = ["OutputNNIfAny(Katakana)", "ChangeInputMode(Zenkaku)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"C-q" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(HankakuKatakana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Katakana)", "ChangeInputMode(Hiragana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"Q" = ["ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-j" = ["FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"C-G" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"Return" = ["ConfirmDirect"]
"C-m" = ["ConfirmDirect"]
"BackSpace" = ["DeleteDirect"]
"C-h" = ["DeleteDirect"]
"C-H" = ["DeleteDirect"]
# 半角カナ(JIS X 0201 カナ)モード時のコマンド
[direct.hankakukatakana]
"C-g" = ["Abort"]
"l" = ["OutputNNIfAny(HankakuKatakana)", "ChangeInputMode(Ascii)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"L" = ["OutputNNIfAny(HankakuKatakana)", "ChangeInputMode(Zenkaku)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"C-q" = ["OutputNNIfAny(Hiragana)", "ChangeInputMode(Hiragana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(HankakuKatakana)", "ChangeInputMode(Hiragana)", "FlushPreviousCarryOver", "FinishKeyEvent"]
"Q" = ["ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-j" = ["FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"C-G" = ["FlushPreviousCarryOver", "Abort", "FinishKeyEvent"]
"Return" = ["ConfirmDirect"]
"C-m" = ["ConfirmDirect"]
"BackSpace" = ["DeleteDirect"]
"C-h" = ["DeleteDirect"]
"C-H" = ["DeleteDirect"]
# 全角英数モード時のコマンド
[direct.zenkaku]
"C-g" = ["Abort", "FinishKeyEvent"]
"C-j" = ["ChangeInputMode(Hiragana)", "FinishKeyEvent"]
"Return" = ["ConfirmDirect"]
"C-m" = ["ConfirmDirect"]
"BackSpace" = ["DeleteDirect"]
"C-h" = ["DeleteDirect"]
"C-H" = ["DeleteDirect"]
# asciiモードという名称はddskk由来。いわゆるlatinモードでのコマンド
[direct.ascii]
"C-g" = ["Abort"]
"C-j" = ["ChangeInputMode(Hiragana)", "FinishKeyEvent"]
"Return" = ["ConfirmDirect"]
"C-m" = ["ConfirmDirect"]
"BackSpace" = ["DeleteDirect"]
"C-h" = ["DeleteDirect"]
"C-H" = ["DeleteDirect"]

[pre_composition.hiragana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Katakana)", "FlushPreviousCarryOver", "ConfirmAsKatakana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsHiragana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]
[pre_composition.katakana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsHiragana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(Katakana)", "FlushPreviousCarryOver", "ConfirmAsKatakana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]
[pre_composition.hankakukatakana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsHiragana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(HankakuKatakana)", "FlushPreviousCarryOver", "ConfirmAsJISX0201", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]

[pre_compisition_okurigana.hiragana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Katakana)", "FlushPreviousCarryOver", "ConfirmAsKatakana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsHiragana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]
[pre_compisition_okurigana.katakana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsHiragana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(Katakana)", "FlushPreviousCarryOver", "ConfirmAsKatakana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]
[pre_compisition_okurigana.hankakukatakana]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"q" = ["OutputNNIfAny(Hiragana)", "FlushPreviousCarryOver", "ConfirmAsKatakana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Q" = ["FinishKeyEvent"]
"C-q" = ["FlushPreviousCarryOver", "ConfirmAsJISX0201", "FinishKeyEvent"]
"C-g" = ["FlushPreviousCarryOver", "FlushConvertedKana", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["OutputNNIfAny(HankakuKatakana)", "FlushPreviousCarryOver", "ConfirmAsJISX0201", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"BackSpace" = ["DeletePrecomposition", "FinishKeyEvent"]
"C-h" = ["DeletePrecomposition", "FinishKeyEvent"]
[composition_selection.hiragana]
"Return" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Escape" = ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-g"= ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"X" = ["Purge", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"x" = ["TryPreviousCandidate", "FinishKeyEvent"]
"BackSpace" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"C-h" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(Katakana)", "FinishKeyEvent"]
"C-q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(HankakuKatakana)", "FinishKeyEvent"]
[composition_selection.katakana]
"Return" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Escape" = ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-g"= ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"X" = ["Purge", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"BackSpace" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"C-h" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(Hiragana)", "FinishKeyEvent"]
"C-q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(HankakuKatakana)", "FinishKeyEvent"]
[composition_selection.hankakukatakana]
"Return" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"C-j" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"Escape" = ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"C-g"= ["Abort", "ChangeCompositionMode(PreComposition)", "FinishKeyEvent"]
"X" = ["Purge", "ChangeCompositionMode(Direct)", "FinishKeyEvent"]
"space" = ["TryNextCandidate", "FinishKeyEvent"]
"BackSpace" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"C-h" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "DeleteDirect", "FinishKeyEvent"]
"q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(Hiragana)", "FinishKeyEvent"]
"C-q" = ["ConfirmComposition", "ChangeCompositionMode(Direct)", "ChangeInputMode(Hiragana)", "FinishKeyEvent"]